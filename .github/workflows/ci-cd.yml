name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:5.6.23
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: kognia_test_db
          MYSQL_USER: kognia_test
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -r api/requirements.txt
    
    - name: Run tests
      run: |
        pytest tests/ --cov=./ --cov-report=xml
      env:
        DB_HOST: localhost
        DB_PORT: 3306
        DB_USER: kognia_test
        DB_PASSWORD: test_password
        DB_NAME: kognia_test_db
        APP_SECRET_KEY: test_secret_key
    
    - name: Upload coverage report
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build and push API image
      uses: docker/build-push-action@v2
      with:
        context: ./api
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/kognia-api:${{ github.sha }}
    
    - name: Build and push Frontend image
      uses: docker/build-push-action@v2
      with:
        context: ./frontend
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/kognia-frontend:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0
    
    - name: Terraform Init
      run: |
        cd infrastructure/terraform
        terraform init
    
    - name: Terraform Apply
      run: |
        cd infrastructure/terraform
        terraform apply -auto-approve \
          -var="db_password=${{ secrets.DB_PASSWORD }}" \
          -var="app_secret_key=${{ secrets.APP_SECRET_KEY }}" \
          -var="openai_api_key=${{ secrets.OPENAI_API_KEY }}" \
          -var="google_gemini_api_key=${{ secrets.GOOGLE_GEMINI_API_KEY }}" \
          -var="anthropic_api_key=${{ secrets.ANTHROPIC_API_KEY }}"